// MODIFY def AND settings VARIABLES TO CUSTOMIZE DISPLAY SETTINGS
// ============================
// default settings for all languages
var def = {
    wrapMode: 1, // 0: no wrap; 1: word wrap
    useTab: true, // use tab instead of space
    tabWidth: 4, // tab size
    indent: 0, // size of indentation, 0: indent size = tab size
    caretWidth: 4,
    caretFore: 0x000000, // color of caret, #BBGGRR
    caretLineBack: 0x333333, // background or frame color of caret line, #BBGGRR
    caretLineFrame: 2, // 0: disable framed style caret line, use caretLineBack as background; >0: frame width
    viewWhitespace: 0 // 0: whitespace invisible; 1: dot & arrows; 2: visible after indent; 3: only in indent
};
// overriding settings for specifc programming languages
var settings = {
    "Log": { wrapMode: 0, tabWidth: 8 },
    "BowPadPlugin": { useTab: false, indent: 8 },
    "JavaScript": { useTab: false },
    "C Sharp": { useTab: false },
    "Java": { useTab: false },
    "Text": { tabWidth: 8 },
    "Html": { tabWidth: 2, indent: 4 },
    "Xaml": { tabWidth: 2, indent: 4 },
    "Xml": { tabWidth: 2, indent: 4 }
};

// DO NOT MODIFY FOLLOWING CODE UNLESS YOU KNOW WHAT YOU ARE DOING
// ============================

// returns the version of the plugin
// this callback is not optional! If you fail to implement this, the plugin
// config dialog won't work properly with your plugin
function Version() { return 100; }

function overrideSettings() {
    var lexer = BowPad.GetCurrentLanguage();
    var s = settings[lexer];
    if (s == null) {
        s = def;
    }
    BowPad.SciSetWrapMode(typeof(s.wrapMode) === "undefined" ? def.wrapMode : s.wrapMode);
    BowPad.SciSetTabWidth(typeof(s.tabWidth) === "undefined" ? def.tabWidth : s.tabWidth);
    BowPad.SciSetUseTabs(typeof(s.useTab) === "undefined" ? def.useTab : s.useTab);
    BowPad.SciSetCaretWidth(typeof(s.caretWidth) === "undefined" ? def.caretWidth : s.caretWidth);
    BowPad.SciSetCaretFore(typeof(s.caretFore) === "undefined" ? def.caretFore : s.caretFore);
    BowPad.SciSetCaretLineBack(typeof(s.caretLineBack) === "undefined" ? def.caretLineBack : s.caretLineBack);
    BowPad.SciSetCaretLineFrame(typeof(s.caretLineFrame) === "undefined" ? def.caretLineFrame : s.caretLineFrame);
    BowPad.SciSetViewWs(typeof(s.viewWhitespace) === "undefined" ? def.viewWhitespace : s.viewWhitespace);
    BowPad.SciSetIndent(typeof(s.indent) === "undefined" ? def.indent : s.indent);
}

// this is the main function that gets executed when the command is run, i.e.
// the button is clicked
function Execute()
{
    BowPad.alert("The plugin script will now be opened. \nModify and save it to customize editor settings for specific languages.");
    BowPad.OpenFile(BowPad.PluginPath + "\\EditorSettings.bpj", false);
    return true;
}

// return true if the plugin command is enabled (used for the button)
// note: not used yet by BowPad, but planned for the future
function IsEnabled() { return true; }

// return true if the plugin button should appear as checked
// note: not used yet by BowPad, but planned for the future
function IsChecked() { return false; }

// called after a document was initialized
function AfterInit(index) {
    overrideSettings();
}

// notification about tabs
function TabNotify(code, tabOrigin)
{
    if (code === -551 || code === 0x0409) {
        overrideSettings();
    }
}