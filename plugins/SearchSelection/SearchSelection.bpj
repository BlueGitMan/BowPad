// returns the version of the plugin
// this callback is not optional! If you fail to implement this, the plugin
// config dialog won't work properly with your plugin
function Version() { return 103; }

// this is the main function that gets executed when the command is run, i.e.
// the button is clicked
function Execute()
{
    var selStart = BowPad.SciGetSelectionStart();
    var selEnd = BowPad.SciGetSelectionEnd();
    if (selStart == selEnd)
        return false;
    if (BowPad.SciLineFromPosition(selStart) != BowPad.SciLineFromPosition(selEnd))
    {
        BowPad.alert("Multiline selection is not yet supported.");
	return false;
    }
    
    var selText = BowPad.SciGetSelText();
    var extractedLines = [];
    var docLen = BowPad.SciGetLength();
    var searchFlags = (BowPad.GetKeyState(0x11) ? 2 : 0 /*ctrl: whole word*/) | (BowPad.GetKeyState(0x10) ? 4 : 0 /*shift: match case*/);
    var foundPos = BowPad.SciFindText(searchFlags, 0, docLen, selText).toArray()[0];
    var lexer = BowPad.GetCurrentLanguage();

    while (foundPos >= 0)
    {
        var line = BowPad.SciLineFromPosition(foundPos);
        var lineText = BowPad.SciGetLine(line);
        extractedLines.push(lineText);
        foundPos = BowPad.SciFindText(searchFlags, BowPad.SciPositionFromLine(line+1), docLen, selText).toArray()[0];
    }
    
    if (extractedLines.length > 1) {
        BowPad.OpenNewTab();
        BowPad.SciInsertText(0, extractedLines.join(""));
        BowPad.SciEmptyUndoBuffer();
        BowPad.SciSetSavePoint();
	BowPad.SetupLexerForLang(lexer);
    }
    else {
	BowPad.alert("Only a single instance is found in document.");
    }
    return true;
}

// return true if the plugin command is enabled (used for the button)
// note: not used yet by BowPad, but planned for the future
function IsEnabled() { return BowPad.SciGetSelectionStart() != BowPad.SciGetSelectionEnd(); }

// return true if the plugin button should appear as checked
// note: not used yet by BowPad, but planned for the future
function IsChecked() { return false; }

// called after a document was opened
function OnDocumentOpen(index) {
}

